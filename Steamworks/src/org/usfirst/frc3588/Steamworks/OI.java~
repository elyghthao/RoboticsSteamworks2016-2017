// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.

package org.usfirst.frc3588.Steamworks;

import org.usfirst.frc3588.Steamworks.commands.AutonomousCommand;
import org.usfirst.frc3588.Steamworks.commands.ClimbingCommand;
import org.usfirst.frc3588.Steamworks.commands.DriveCommand;
import org.usfirst.frc3588.Steamworks.commands.DrivePegCommand;
import org.usfirst.frc3588.Steamworks.commands.GearCloseCommand;
import org.usfirst.frc3588.Steamworks.commands.GearReleaseCommand;
import org.usfirst.frc3588.Steamworks.commands.LeftRopeArmClose;
import org.usfirst.frc3588.Steamworks.commands.LeftRopeArmOpen;
import org.usfirst.frc3588.Steamworks.commands.ReverseClimbingCommand;
import org.usfirst.frc3588.Steamworks.commands.RightRopeArmClose;
import org.usfirst.frc3588.Steamworks.commands.RightRopeArmOpen;
import org.usfirst.frc3588.Steamworks.commands.RopeArmClose;
import org.usfirst.frc3588.Steamworks.commands.RopeArmOpen;
import org.usfirst.frc3588.Steamworks.commands.directionSwitch;

import edu.wpi.first.wpilibj.Joystick;
import edu.wpi.first.wpilibj.buttons.JoystickButton;
import edu.wpi.first.wpilibj.smartdashboard.SmartDashboard;

/**
 * This class is the glue that binds the controls on the physical operator
 * interface to the commands and command groups that allow control of the robot.
 */
public class OI {
	//// CREATING BUTTONS
	// One type of button is a joystick button which is any button on a
	//// joystick.
	// You create one by telling it which joystick it's on and which button
	// number it is.
	// Joystick stick = new Joystick(port);
	// Button button = new JoystickButton(stick, buttonNumber);

	// There are a few additional built in buttons you can use. Additionally,
	// by subclassing Button you can create custom triggers and bind those to
	// commands the same as any other Button.

	//// TRIGGERING COMMANDS WITH BUTTONS
	// Once you have a button, it's trivial to bind it to a button in one of
	// three ways:

	// Start the command when the button is pressed and let it run the command
	// until it is finished as determined by it's isFinished method.
	// button.whenPressed(new ExampleCommand());

	// Run the command while the button is being held down and interrupt it once
	// the button is released.
	// button.whileHeld(new ExampleCommand());

	// Start the command when the button is released and let it run the command
	// until it is finished as determined by it's isFinished method.
	// button.whenReleased(new ExampleCommand());

	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    public JoystickButton gearRelease1;
    public JoystickButton climbStart1;
    public JoystickButton gearClose1;
    public JoystickButton leftRopeArmClose1;
    public JoystickButton rightRopeArmClose1;
    public JoystickButton lefRopeArmOpen1;
    public JoystickButton rightRopeArmOpen1;
    public JoystickButton drivePegCommand1;
    public Joystick joystick1;
    public JoystickButton gearRelease2;
    public JoystickButton climbStart2;
    public JoystickButton gearClose2;
    public JoystickButton leftRopeArmClose2;
    public JoystickButton rightRopeArmClose2;
    public JoystickButton leftRopeArmOpen2;
    public JoystickButton rightRopeArmOpen2;
    public JoystickButton drivePegCommand2;
    public Joystick joystick2;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
	public JoystickButton turboClimb1;
	public JoystickButton turboClimb2;
	
	public JoystickButton directionSwitch1; 
	public JoystickButton directionSwitch2;
	  


	public OI() {
		// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS

        joystick2 = new Joystick(1);
        
        drivePegCommand2 = new JoystickButton(joystick2, 9);
        drivePegCommand2.whenPressed(new DrivePegCommand());
        rightRopeArmOpen2 = new JoystickButton(joystick2, 8);
        rightRopeArmOpen2.whenPressed(new RightRopeArmOpen());
        leftRopeArmOpen2 = new JoystickButton(joystick2, 7);
        leftRopeArmOpen2.whenPressed(new LeftRopeArmOpen());
        rightRopeArmClose2 = new JoystickButton(joystick2, 12);
        rightRopeArmClose2.whenPressed(new RightRopeArmClose());
        leftRopeArmClose2 = new JoystickButton(joystick2, 11);
        leftRopeArmClose2.whenPressed(new LeftRopeArmClose());
        gearClose2 = new JoystickButton(joystick2, 2);
        gearClose2.whenReleased(new GearCloseCommand());
        climbStart2 = new JoystickButton(joystick2, 1);
        climbStart2.whileHeld(new ClimbingCommand());
        gearRelease2 = new JoystickButton(joystick2, 2);
        gearRelease2.whenPressed(new GearReleaseCommand());
        joystick1 = new Joystick(0);
        
        drivePegCommand1 = new JoystickButton(joystick1, 9);
        drivePegCommand1.whenPressed(new DrivePegCommand());
        rightRopeArmOpen1 = new JoystickButton(joystick1, 8);
        rightRopeArmOpen1.whenPressed(new RightRopeArmOpen());
        lefRopeArmOpen1 = new JoystickButton(joystick1, 7);
        lefRopeArmOpen1.whenPressed(new LeftRopeArmOpen());
        rightRopeArmClose1 = new JoystickButton(joystick1, 12);
        rightRopeArmClose1.whenPressed(new RightRopeArmClose());
        leftRopeArmClose1 = new JoystickButton(joystick1, 11);
        leftRopeArmClose1.whenPressed(new LeftRopeArmClose());
        gearClose1 = new JoystickButton(joystick1, 2);
        gearClose1.whenReleased(new GearCloseCommand());
        climbStart1 = new JoystickButton(joystick1, 1);
        climbStart1.whileHeld(new ClimbingCommand());
        gearRelease1 = new JoystickButton(joystick1, 2);
        gearRelease1.whenPressed(new GearReleaseCommand());


        // SmartDashboard Buttons
        SmartDashboard.putData("Autonomous Command", new AutonomousCommand());
        SmartDashboard.putData("Drive Command", new DriveCommand());
        SmartDashboard.putData("Gear Release Command", new GearReleaseCommand());
        SmartDashboard.putData("Climbing Command", new ClimbingCommand());
        SmartDashboard.putData("Gear Close Command", new GearCloseCommand());
        SmartDashboard.putData("Drive Peg Command", new DrivePegCommand());
        SmartDashboard.putData("LeftRopeArmClose", new LeftRopeArmClose());
        SmartDashboard.putData("RightRopeArmClose", new RightRopeArmClose());
        SmartDashboard.putData("LeftRopeArmOpen", new LeftRopeArmOpen());
        SmartDashboard.putData("RightRopeArmOpen", new RightRopeArmOpen());

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
		turboClimb1 = new JoystickButton(joystick1, 4);
		turboClimb2 = new JoystickButton(joystick2, 4);
		
		directionSwitch1 = new JoystickButton(joystick1, 10);
		directionSwitch2 = new JoystickButton(joystick2, 10);
		  
		 
	}

	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=FUNCTIONS
    public Joystick getJoystick1() {
        return joystick1;
    }

    public Joystick getJoystick2() {
        return joystick2;
    }


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=FUNCTIONS
}
