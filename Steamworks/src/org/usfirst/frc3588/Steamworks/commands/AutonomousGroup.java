// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.

package org.usfirst.frc3588.Steamworks.commands;

import edu.wpi.first.wpilibj.command.CommandGroup;

/**
 *
 */
public class AutonomousGroup extends CommandGroup {
	int driveStraight = 0;
	int turnLeft = 1;
	int turnRight = 2;
	private boolean contoursFound;

	@Override
	public void initialize() {
		contoursFound = false;
	}

	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=PARAMETERS
	public AutonomousGroup(int autoMode) {

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=PARAMETERS
        // Add Commands here:
        // e.g. addSequential(new Command1());
        //      addSequential(new Command2());
        // these will run in order.

        // To run multiple commands at the same time,
        // use addParallel()
        // e.g. addParallel(new Command1());
        //      addSequential(new Command2());
        // Command1 and Command2 will run in parallel.

        // A command group will require all of the subsystems that each member
        // would require.
        // e.g. if Command1 requires chassis, and Command2 requires arm,
        // a CommandGroup containing them would require both the chassis and the
        // arm.
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=COMMAND_DECLARATIONS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=COMMAND_DECLARATIONS
    	
    public void execute () {
    	if (autoMode == driveStraight) {
    		addSequential(new DriveStraight(3));
    	
    	}
    	else if (autoMode == turnLeft) {
    		addSequential(new DriveStraight(3));
    		addSequential(new Turn(-60.0, 3));
    	}
    	else if (autoMode == turnRight) {
    		addSequential(new DriveStraight(3));
    		addSequential(new Turn(60.0, 3));
    	} 
    	else {
    		System.out.println("something went wrong :(");
    	}
    }
    }
}
