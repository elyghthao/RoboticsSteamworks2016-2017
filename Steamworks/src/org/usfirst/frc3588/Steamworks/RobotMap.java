// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc3588.Steamworks;

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import com.ctre.CANTalon;
import edu.wpi.first.wpilibj.RobotDrive;

// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import edu.wpi.first.wpilibj.livewindow.LiveWindow;

/**
 * The RobotMap is a mapping from the ports sensors and actuators are wired into
 * to a variable name. This provides flexibility changing wiring, makes checking
 * the wiring easier and significantly reduces the number of magic numbers
 * floating around.
 */
public class RobotMap {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    public static CANTalon chassisLeftFrontMotor;
    public static CANTalon chassisLeftRearMotor;
    public static CANTalon chassisRightFrontMotor;
    public static CANTalon chassisRightRearMotor;
    public static RobotDrive chassisMechanum;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    public static void init() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
        chassisLeftFrontMotor = new CANTalon(0);
        LiveWindow.addActuator("Chassis", "LeftFrontMotor", chassisLeftFrontMotor);
        
        chassisLeftRearMotor = new CANTalon(1);
        LiveWindow.addActuator("Chassis", "LeftRearMotor", chassisLeftRearMotor);
        
        chassisRightFrontMotor = new CANTalon(2);
        LiveWindow.addActuator("Chassis", "RightFrontMotor", chassisRightFrontMotor);
        
        chassisRightRearMotor = new CANTalon(3);
        LiveWindow.addActuator("Chassis", "RightRearMotor", chassisRightRearMotor);
        
        chassisMechanum = new RobotDrive(chassisLeftFrontMotor, chassisLeftRearMotor,
              chassisRightFrontMotor, chassisRightRearMotor);
        
        chassisMechanum.setSafetyEnabled(true);
        chassisMechanum.setExpiration(0.1);
        chassisMechanum.setSensitivity(0.5);
        chassisMechanum.setMaxOutput(1.0);
        chassisMechanum.setInvertedMotor(RobotDrive.MotorType.kFrontLeft, true);
        chassisMechanum.setInvertedMotor(RobotDrive.MotorType.kRearLeft, true);

        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    }
}
